#include <iostream>
using namespace std;
// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 01 and 02, the first 10 terms will be:
// 1,2,3,5,8,13,21,24,55,89,...

// By considering the terms in the Fibonacci sequence whose values do not exceed
// four million, find the sum of the even-valued terms.

void signature() {
  cout << "\n┏┓╻┏━╸╻ ╻┏━╸┏━┓   ┏━┓┏━╸╺┳╸╺┳╸╻  ┏━╸"
          "\n┃┗┫┣╸ ┃┏┛┣╸ ┣┳┛   ┗━┓┣╸  ┃  ┃ ┃  ┣╸ "
          "\n╹ ╹┗━╸┗┛ ┗━╸╹┗╸   ┗━┛┗━╸ ╹  ╹ ┗━╸┗━╸";
}

class clsFibonacci {
private:
  long _N = 0;
  long _Fab = 0;
  long _P1 = 1;
  long _P2 = 0;
  long _Sum = 0;

public:
  clsFibonacci(long n) { _N = n; }

  void SetNumber(long n) { _N = n; }
  long GetNumber() { return _N; }

  void CalculateFibinacci() {
    for (long i = 1; i <= _N; i++) {
      _Fab = _P1 + _P2;

      if (_Fab % 2 == 0) {
        _Sum += _Fab;
      }

      _P2 = _P1;
      _P1 = _Fab;
    }
  }

  void Print() { cout << _Sum; }
};

int main() {
  clsFibonacci A1(32);

  A1.CalculateFibinacci();
  A1.Print();

  signature();
  return 0;
}
